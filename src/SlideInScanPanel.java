/*
 * SlideInScanPanel.java
 *
 * Created on July 25, 2008, 6:56 AM
 */

import java.awt.*;
import javax.swing.JFrame;

/**
 *
 * @author  Sharafat
 */
public class SlideInScanPanel extends javax.swing.JPanel {
    private Scan scan;
    private Scan.DoScan doScan;
    private ScanFrame scanFrame;
    protected boolean isPaused = false;
    
    
    /** Creates new form SlideInScanPanel */
    SlideInScanPanel(Scan currScan, Scan.DoScan doScan, ScanFrame scanFrame) {
        this.scan = currScan;
        this.doScan = doScan;
        this.scanFrame = scanFrame;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pause = new javax.swing.JLabel();
        stop = new javax.swing.JLabel();
        progress = new javax.swing.JProgressBar();
        separator1 = new javax.swing.JLabel();
        details = new javax.swing.JLabel();
        separator2 = new javax.swing.JLabel();
        scanning = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        pause.setBackground(new java.awt.Color(255, 255, 255));
        pause.setText("<html><u>Pause</u></html");
        pause.setToolTipText("Pause Scanning");
        pause.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        pause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pauseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pauseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pauseMouseExited(evt);
            }
        });

        stop.setText("<html><u>Stop</u></html>");
        stop.setToolTipText("Stop Scanning");
        stop.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stopMouseExited(evt);
            }
        });

        progress.setBackground(new java.awt.Color(255, 255, 255));
        progress.setStringPainted(true);

        separator1.setText("|");

        details.setText("<html><u>Details...</u></html>");
        details.setToolTipText("Show Scanning Details");
        details.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        details.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                detailsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detailsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detailsMouseExited(evt);
            }
        });

        separator2.setText("|");

        scanning.setBackground(new java.awt.Color(255, 255, 255));
        scanning.setText("Scanning...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(stop, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(details, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                        .addGap(31, 31, 31))
                    .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scanning, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scanning)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(separator1)
                    .addComponent(stop)
                    .addComponent(separator2)
                    .addComponent(details)
                    .addComponent(pause))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pause.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        stop.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        details.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }// </editor-fold>//GEN-END:initComponents

private void pauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseClicked
    if (scan.shouldPauseScanning) {
        isPaused = false;
        pause.setText("<html><u>Pause</u></html");
        doScan.resume();
    } else {
        scan.shouldPauseScanning = true;        
        scan.pause.setText("Resume");
        scan.pause.setEnabled(false);
        scan.stop.setEnabled(false);
        pause.setText("<html><u>Resume</u></html");
        isPaused = true;
    }
}//GEN-LAST:event_pauseMouseClicked

private void pauseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseEntered
    if (isPaused) {
        pause.setText("<html><b><u>Resume</u></b></html>");
    } else {
        pause.setText("<html><b><u>Pause</u></b></html>");
    }
}//GEN-LAST:event_pauseMouseEntered

private void pauseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseExited
    if (isPaused) {
        pause.setText("<html><u>Resume</u></html>");
    } else {
        pause.setText("<html><u>Pause</u></html>");
    }
}//GEN-LAST:event_pauseMouseExited

private void stopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseClicked
    scan.shouldStopScanning = true;
    scan.stop.setEnabled(false);
    scan.pause.setEnabled(false);
    
    if (doScan.detectedTableModel.getRowCount() > 0) {
        scan.detectedAction.setEnabled(true);
    }
    if (doScan.suspectedTableModel.getRowCount() > 0) {
        scan.suspectedAction.setEnabled(true);
    }
    
    pause.removeMouseListener(pause.getMouseListeners()[0]);
    pause.removeMouseListener(pause.getMouseListeners()[0]);
    pause.setForeground(Color.DARK_GRAY);
    pause.setText("<html>Pause</html>");
    pause.setCursor(Cursor.getDefaultCursor());
    
    stop.removeMouseListener(stop.getMouseListeners()[0]);
    stop.removeMouseListener(stop.getMouseListeners()[0]);
    stop.setForeground(Color.DARK_GRAY);
    stop.setText("<html>Stop</html>");
    stop.setCursor(Cursor.getDefaultCursor());
}//GEN-LAST:event_stopMouseClicked

private void stopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseEntered
    stop.setText("<html><b><u>Stop</u></b></html>");
}//GEN-LAST:event_stopMouseEntered

private void stopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseExited
    stop.setText("<html><u>Stop</u></html>");
}//GEN-LAST:event_stopMouseExited

private void detailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailsMouseClicked
    scanFrame.panel.removeAll();
    scanFrame.validate();
    scanFrame.panel.repaint();
    scanFrame.panel.add(scan);    
    Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();
    scanFrame.setLocation(((screenDim.width - scanFrame.getWidth()) / 2),
                ((screenDim.height - scanFrame.getHeight()) / 2));
    scanFrame.setVisible(true);
    scanFrame.setExtendedState(JFrame.NORMAL);
    scanFrame.toFront();
}//GEN-LAST:event_detailsMouseClicked

private void detailsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailsMouseEntered
    details.setText("<html><b><u>Details...</u></b></html>");
}//GEN-LAST:event_detailsMouseEntered

private void detailsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailsMouseExited
    details.setText("<html><u>Details...</u></html>");
}//GEN-LAST:event_detailsMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel details;
    protected javax.swing.JLabel pause;
    protected javax.swing.JProgressBar progress;
    protected javax.swing.JLabel scanning;
    private javax.swing.JLabel separator1;
    private javax.swing.JLabel separator2;
    protected javax.swing.JLabel stop;
    // End of variables declaration//GEN-END:variables

}
